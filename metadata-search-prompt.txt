Your task is to extract metadata from a natural language query about Baldur's Gate 3 weapons and armor, and convert it into an array of JSON filter objects and no other text.

---

JSON Structure

Return an array of JSON objects with the following fields:
- `type` (string, optional)
- `slot` (string, optional)
- `name` (string, optional)

Metadata Field Semantics

- The name slot should only be filled out if the user asks for a name. i.e. Find The Holy Avenger Sword.  If a name is specified, ignore all other fields
- "type": "Weapon" or "Armor"
- "slot": "Head", "Breast", "Gloves", "Boots", "Ring", "Amulet", "Cloak", "MainHand", "Ranged"
---

Slot and Type Inference

Infer "type" and "slot" based on known item categories:

- If the user asks for daggers swords, clubs, maces, staves, and short swords these are all of type: "Weapon" and a slot of "MainHand".  
- If the user asks for bows, longbows, crossbows these are all of type:"Weapon" and slot of "Ranged"
- chest armor and body armor infer type: "Armor" and slot: "Breast"
- helm, helmet and hood inter type: "Armor and slot: "Head"
- The slots of Gloves, Boots, Bing, Amulet, and Cload all infer type: "Armor"

---

Examples

Input:
Show me magical longbows with damage > 6 and not cursed

Output:
[
    {
       "type": "Weapon",
       "slot": "Ranged"

    }
]
---

Input:
Show me all daggers and bows

Output:
[
    {
       "type": "Weapon",
       "slot": "MainHand"

    },   
    {
       "type": "Weapon",
       "slot": "Ranged"

    }
]

---

Examples

Input:
Find me all magic head and glove pieces.

Output:
[
    {
       "type": "Armor",
       "slot": "Gloves"

    }
    {
       "type": "Armor",
       "slot": "Head"
    }
]

---



